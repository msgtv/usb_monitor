"""Init

Revision ID: bd3feb6c3626
Revises: 
Create Date: 2025-05-15 08:31:22.195786

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bd3feb6c3626'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comments',
    sa.Column('object_type', sa.Unicode(length=255), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('departments',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('dep_type', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventsources',
    sa.Column('data_source_name', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('db_type', sa.String(length=20), nullable=False),
    sa.Column('conn_params', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('computers',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_accepted_usb', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employees',
    sa.Column('fullname', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('job_title', sa.String(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='fk_user_deparment'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usbs',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('sn', sa.String(), nullable=True),
    sa.Column('vid', sa.String(), nullable=True),
    sa.Column('pid', sa.String(), nullable=True),
    sa.Column('class_type', sa.Integer(), nullable=True),
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.Column('is_accepted', sa.Boolean(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('event_id', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('is_closed', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('event_source_id', sa.Integer(), nullable=False),
    sa.Column('usb_id', sa.Integer(), nullable=False),
    sa.Column('computer_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['computer_id'], ['computers.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='fk_event_employee'),
    sa.ForeignKeyConstraint(['event_source_id'], ['eventsources.id'], name='fk_event_event_source'),
    sa.ForeignKeyConstraint(['usb_id'], ['usbs.id'], name='fk_event_usb'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id', 'event_source_id', name='uix__event_id__source')
    )
    op.create_table('tasks',
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('sheduled_dt', sa.DateTime(), nullable=True),
    sa.Column('computer_id', sa.Integer(), nullable=False),
    sa.Column('usb_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['computer_id'], ['computers.id'], ),
    sa.ForeignKeyConstraint(['usb_id'], ['usbs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usb_accepted_on_computers',
    sa.Column('usb_id', sa.Integer(), nullable=True),
    sa.Column('computer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['computer_id'], ['computers.id'], ),
    sa.ForeignKeyConstraint(['usb_id'], ['usbs.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usb_accepted_on_computers')
    op.drop_table('tasks')
    op.drop_table('events')
    op.drop_table('usbs')
    op.drop_table('employees')
    op.drop_table('computers')
    op.drop_table('eventsources')
    op.drop_table('departments')
    op.drop_table('comments')
    # ### end Alembic commands ###
